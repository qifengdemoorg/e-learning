apiVersion: v1
kind: ConfigMap
metadata:
  name: elearning-frontend-config
  namespace: #{NAMESPACE}#
  labels:
    app: elearning-frontend
    component: frontend
    version: v1
data:
  # Frontend configuration
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        server {
            listen 8080;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;

            # Security
            server_tokens off;

            # SPA fallback
            location / {
                try_files $uri $uri/ /index.html;
                expires 1h;
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            }

            # Static assets caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Deny access to sensitive files
            location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
            }

            location ~ ~$ {
                deny all;
                access_log off;
                log_not_found off;
            }
        }
    }
  
  # Application configuration
  app-config.env: |
    NODE_ENV=production
    VITE_APP_TITLE=Contoso E-Learning Platform
    VITE_API_BASE_URL=#{VITE_API_BASE_URL}#
